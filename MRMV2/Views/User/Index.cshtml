@model MRMV2.Models.Users
@{
    ViewBag.Title = "User Profile";
    var uid = Html.Action("getUserID", "Account");
}
<style type="text/css">
    input[type="file"] {
        display: none;
    }

    body {
        overflow: hidden;
    }

    .body-content {
        /*max-width: 80%;*/
    }

    #leftDiv {
        width: 24%;
        max-height: 100%;
        height: 100%;
        float: left;
        text-align: center;
    }

    a:hover {
        text-decoration: none;
    }

    .custom-file-upload {
        border: 1px solid #ccc;
        padding: 6px 12px;
        background-color: gainsboro;
        cursor: pointer;
    }




    #imageUpload {
        background-repeat: no-repeat;
        background-size: cover;
        border: 1px dashed white;
        overflow: auto;
    }

    ::-webkit-scrollbar {
        width: 12px;
        padding-left: 200px;
    }

    ::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
        border-radius: 10px;
    }

    ::-webkit-scrollbar-thumb {
        border-radius: 10px;
        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5);
    }

    #imageUpload label {
        margin-left: auto;
        margin-right: auto;
        width: 6em;
        display: block;
        margin-top: 3%;
    }



    #leftDiv img {
        width: 100%;
        max-height: 285px;
        min-height: 285px;
    }

    #leftDiv span {
        font-size: 30px;
    }

    .userInfo {
        max-width: 100%;
        width: 100%;
        margin-top: 2%;
        resize: none;
        height: 390px;
        font-size: larger;
    }

    #Edit {
        margin-left: 25%;
        width: 70%;
        position: relative;
    }

    .ui-tabs {
        overflow: hidden;
    }

    #dialog {
        overflow: auto;
        padding: 15px;
        background-color: rgba(255, 255, 255, 0.64);
        border-radius: 15px;
    }


    #dialog, #usrProfile {
        color: white;
        font-weight: bold;
        overflow: hidden;
    }

    #userSections {
        list-style-type: none;
        text-align: center;
        width: 365px;
        margin-left: auto;
        padding: 0px;
        margin-right: auto;
        padding-bottom: 25px;
        margin-bottom: 0px;
        color: white;
        font-weight: bold;
    }

        #userSections li {
            float: left;
            margin-right: 15px;
            cursor: pointer;
        }


    .currentSection {
        border-bottom: 3px solid white;
    }


    #userSections li:hover {
        border-bottom: 3px solid grey;
    }


    #usrProfile li img {
        width: 100%;
        height: 100%;
        max-height: 285px;
        min-height: 285px;
    }


    #usrProfile {
        overflow-y: auto;
    }

        #usrProfile li {
            list-style-type: none;
            float: left;
            margin-right: 1%;
            cursor: pointer;
            width: 32%;
            text-align: center;
            padding-top: 1%;
            height: 50%;
            margin-bottom: 5%;
        }

    #usrProfile {
        margin-left: 1%;
    }

    #Edit input[type=button] {
        position: absolute;
        right: 10px;
        bottom: 10px;
        background-color: white;
        border-radius: 10px;
    }


    #usrProfile li div {
        height: 100%;
    }


    .title {
        border-bottom: 2px solid white;
    }
</style>
<div id="userProfilePage">
    @if (Model.userID != null)
    {
        <ul id="userSections">
            <li id="userProfile" class="currentSection">User Profile</li>
            <li id="likedRecipes">Liked Recipes</li>
            <li id="uploadedRecipes">Uploaded Recipes</li>
        </ul>
    }
    <div id="dialog">

        <ul id="likedrec" style="position:absolute; left:-100%;">
            @for (int i = 0; i < Model.LikedRecipes.Count; i++)
            {
                <li onclick="window.location.href='@Url.Action("RecipeID", "Recipes", new {id = @Model.LikedRecipes[i].Recipe_ID})';"><div><img src="@Model.LikedRecipes[i].Display_Picture_Location" /><p class="title">@Model.LikedRecipes[i].Recipe_Name</p><span> @Model.LikedRecipes[i].Recipe_Short_Description</span></div></li>
            }
        </ul>



        <ul id="uploadedrec">
            @for (int i = 0; i < Model.UploadedRecipes.Count; i++)
            {
                <li><a href="@Url.Action("RecipeID", "Recipes", new {id = @Model.UploadedRecipes[i].Recipe_ID})"><div><img src="@Model.UploadedRecipes[i].Display_Picture_Location" /><p class="title" onclick="window.location.href='@Url.Action("RecipeID", "Recipes", new {id = @Model.UploadedRecipes[i].Recipe_ID})';">@Model.UploadedRecipes[i].Recipe_Name</p><span> @Model.UploadedRecipes[i].Recipe_Short_Description</span></div></a></li>
            }
        </ul>

        <div id="usrProfile">
            <div id="leftDiv">
                <span>@Model.userName</span><img src="../../ProfilePicture/@Model.userProfilePicture">
                @if (Model.userID == uid.ToString())
                {
                    <div id="imageUpload">
                        <form action="" enctype="multipart/form-data" id="img" method="post" onsubmit="return false">
                            <label class="custom-file-upload">
                                <input type="file" id="File" accept="image/*" name="File" />Click
                            </label>
                        </form><span>Or<br>Drop</span>
                    </div>

                }
            </div>
            <div id="Edit"><textarea class="userInfo" maxlength="600">@Model.user_Description</textarea><input type='button' value='Submit' /></div>
        </div>




    </div>

</div>

<script type="text/javascript">

    var descriptionUpdated = "";
    var imgUpdated = "";
    var liked = "";
    var uploaded = "";
    var user = "";
    var imagesAdded = 0;
    $(document).ready(function () {
        var textColor = "@Html.Action("getTextColor", "User")";
        $("a").css("color", textColor);

        

        var inputBoxColorRaw = "@Html.Action("getInputColor", "User")";
        var inputBoxColor = inputBoxColorRaw.split('!!!###');

        function hexToR(h) { return parseInt((cutHex(h)).substring(0, 2), 16) }
        function hexToG(h) { return parseInt((cutHex(h)).substring(2, 4), 16) }
        function hexToB(h) { return parseInt((cutHex(h)).substring(4, 6), 16) }
        function cutHex(h) { return (h.charAt(0) == "#") ? h.substring(1, 7) : h }

        R = hexToR(inputBoxColor[0]);
        G = hexToG(inputBoxColor[0]);
        B = hexToB(inputBoxColor[0]);


        $('textarea').css("background-color", "rgba(" + R + "," + G + "," + B + "," + inputBoxColor[1] + ")")
        $('#imageUpload').css("background-color", "rgba(" + R + "," + G + "," + B + "," + inputBoxColor[1] + ")")
        $(".userInfo").css("color", textColor);
        liked = "<ul>" + $("#likedrec").html() + "</ul>";
        $("#likedrec").remove();

        uploaded = "<ul>" + $("#uploadedrec").html() + "</ul>";
        $("#uploadedrec").remove();

        createProfile();

        //On the submit button pressed for user description upload the description and post a message back as well as store the description on success
        $("#Edit input[type=button]").on('click', function () {
            var description = $("#Edit textarea").val();

            if (description !== "" || description !== "This user hasn't shared anything about themselves.") {
                $.ajax({
                    type: "POST",
                    url: "/Account/updateUserDescription",
                    data: { description },
                    success: function (data) {
                        toast('User description has been updated.', 2000)
                        descriptionUpdated = description;
                    }
                });
            }
        });


        user = $("#usrProfile").html();

    })

    //Change the html in on the page to display the page for the corresponding link clicked. Remove all event listeners if not on the first page
    $("#userSections li").on("click", function () {
        $("li").removeClass("currentSection")
        $(this).addClass("currentSection")

        var box;
        box = document.getElementById("imageUpload");
        if (box != null) {
            box.removeEventListener("dragenter", OnDragEnter, false);
            box.removeEventListener("dragover", OnDragOver, false);
            box.removeEventListener("drop", OnDrop, false);
        }
        if (this.id == "userProfile") {
            $("#usrProfile").html(user)
            createProfile();
        }
        else if (this.id == "likedRecipes") {
            $("#usrProfile").html(liked)
        }
        else {
            $("#usrProfile").html(uploaded)
        }

    });






    /* This block of code will resize the username to fit in the left div.
     * The total div width is calculated as well as the text width.
     * After both values have been found they are compared and if 20% of the divs width is less than the text width than the font-size is set to smaller and they are compared again.
     * When done in a while loop the page was crashing so it was changed to a for loop that runs the check 10 times
     */
    var leftWidth = ($("#dialog").width() * .2)
    var textWidth = $("#leftDiv span").width()
    var size = 25;
    for (var i = 0; i < 10; i++)
        if (textWidth > leftWidth) {
            $("#leftDiv span").css("font-size", size + "px")
            size -= 2;
            textWidth = $("#leftDiv span").width()

        }



    var h = window.innerHeight
    $("#lkRecipes").css("height", h + "px");
    $("#uplRecipes").css("height", h + "px");
    $("#dialog").css("height", (h-150) + "px");


    //Build the about the user page. This is done in a method because the drop event listener for the picture needs to be re-added every time the user loads the user profile page
    function createProfile() {

        $("#usrProfile").removeClass("offPage")
        $("#usrProfile div").removeClass("offPage")
        if ("@Model.userID" == "") {
            $("#usrProfile").html("<h1>There is no user with that Id</h1>");

        }
        else if ("@Model.userName" == "@User.Identity.Name") {
            var box;
            box = document.getElementById("imageUpload");

            if (box != null) {
                box.addEventListener("dragenter", OnDragEnter, false);
                box.addEventListener("dragover", OnDragOver, false);
                box.addEventListener("drop", OnDrop, false);
                $("#usrProfile").css("height", "100%");
                $(".userInfo").css("height", h / 2 + "px");
                $("#leftDiv").css("height", window.innerHeight / 1.7);

            }
        }
        else {
            $("#usrProfile textarea").prop("disabled", "true");
            $("#usrProfile input[type=button]").remove();
            $("#usrProfile").css("height", window.innerHeight + "px");
            $(".userInfo").css("height", h / 2 + "px");
            $("#leftDiv").css("height", window.innerHeight / 1.7);


        }

        //Since the description in the model is updated on page load if changes are made to the description then a different section of this page is entered the description will default back to what it was on page load.
        //This bit of code prevents that by saving the changes made client side as well and setting the description to descriptionUpdated if its not empty
        if (descriptionUpdated != "")
            $(".userInfo").text(descriptionUpdated)

        //Same thing as above but for the users profile picture
        if (imgUpdated!= "")
            $("#leftDiv img").prop("src", imgUpdated);


    }






    //Drop listeners for uploading an image using the drop method
    function OnDragEnter(e) {
        e.stopPropagation();
        e.preventDefault();
    }

    function OnDragOver(e) {
        e.stopPropagation();
        e.preventDefault();
    }

    function OnDrop(e) {
        e.stopPropagation();
        e.preventDefault();
        uploadImages(e.dataTransfer.files);



    }


    //When a file is uploaded
    $("#File").change(function () {
        uploadImages("");
    });

    //Upload the image and update user profile pictures on screen
    function uploadImages(object) {
        
        var selectedFiles = object;
        var formData = new FormData();
        var uid = "@ViewBag.UserID";
        if (selectedFiles === "") {
            var file = document.getElementById("File").files[0];
            formData.append("File", file);
        }
        else {
            formData.append("File", selectedFiles[0]);
        }



        $.ajax({
            type: "POST",
            url: "/User/changeProfilePic",
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (response) {
                $("#leftDiv img").prop("src", response+"?N="+imagesAdded);
                $("#navBar img").prop("src", response + "?N=" + imagesAdded);
                imagesAdded++;
                toast("Profile Picture has been updated.", 2000);
                imgUpdated = response;
            },
            error: function () {
                toast("An error has occured.", 2000);
            }
        });
    }

</script>
